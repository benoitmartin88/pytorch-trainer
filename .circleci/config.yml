# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#        - pip-packages-v1-{{ .Branch }}-
#        - pip-packages-v1-

jobs:
  prepare_env:
    docker:
      - image: circleci/python:3.5

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_cache
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements.txt
            pip install -q twine wheel
            ls -alh
            ls -alh ~

      - save_cache:
          paths:
            - .venv
            - ~/.cache
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}

  test:
    docker:
      - image: circleci/python:3.5

    steps:
      - checkout
      - *restore_cache
      - run:
          name: run tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python -m unittest

  build:
    docker:
      - image: circleci/python:3.5

    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run:
          name: build package
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py sdist bdist_wheel
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/

  deploy_rc:
    docker:
      - image: circleci/python:3.5

    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: deploy release candidate
          command: |
            python3 -m venv venv
            . venv/bin/activate
            twine upload --repository testpypi dist/*

  deploy:
    docker:
      - image: circleci/python:3.5

    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: deploy release
          command: |
            python3 -m venv venv
            . venv/bin/activate
            twine upload --repository pypi dist/*

#      - store_artifacts:
#          path: test-reports
#          destination: test-reports

workflows:
  version: 2
  build-deploy:
    jobs:
      - prepare_env
      - test:
          requires:
            - prepare_env
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - rc
                - master
      - deploy_rc:
          requires:
            - build
          filters:
            branches:
              only: rc
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
