# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
        - pip-packages-v1-{{ .Branch }}-
        - pip-packages-v1-

jobs:
  prepare:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.5

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_cache
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements.txt
            pip install -q twine wheel

      - save_cache:
          paths:
            - ./venv
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}

  test:
    steps:
      - checkout
      - *restore_cache
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m unittest

  build:
    branches:
      only:
        - rc
        - master
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run:
          name: build package
          command: |
            . venv/bin/activate
            python setup.py sdist bdist_wheel
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/

  deploy_rc:
    branches:
      only:
        - rc
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: deploy release candidate
          command: |
            . venv/bin/activate
            twine upload --repository testpypi dist/*

  deploy:
    branches:
      only:
        - master
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: deploy release
          command: |
            . venv/bin/activate
            twine upload --repository pypi dist/*

#      - store_artifacts:
#          path: test-reports
#          destination: test-reports
